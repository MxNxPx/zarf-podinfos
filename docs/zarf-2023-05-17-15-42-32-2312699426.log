
[33mSaving log file to /tmp/zarf-2023-05-17-15-42-32-2312699426.log[0m
[33m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:32-04:00  -  json: unsupported type: func(context.Context, v1.Descriptor) error ERROR marshalling json[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:238)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:32-04:00  -  packager.New()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:32-04:00  -  packager.createPaths()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/packager/common.go:168)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:32-04:00  -  Using temp path: '/tmp/zarf-3322082491'[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m
[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:32-04:00  -  packager.Deploy()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/packager/deploy.go:39)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:32-04:00  -  packager.handlePackagePath()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/packager/network.go:31)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:32-04:00  -  Provided package path is not a URL, skipping download[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/packager/network.go:38)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:32-04:00  -  Checking for partial package: zarf-package-podinfos-amd64-0.0.1.tar.zst[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:32-04:00  -  No partial package detected[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/packager/common.go:284)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m[0m[0m [97m[97mExtracting the package, this may take a few moments[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mExtracting the package, this may take a few moments[0m[0m[90m[90m (0s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mLoading the zarf package config[0m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:32-04:00  -  Loading zarf config /tmp/zarf-3322082491/zarf.yaml[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:32-04:00  -  config.isCompatibleComponent(k8s-manifests, true)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:32-04:00  -  config.isCompatibleComponent(podinfo-chart, true)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:32-04:00  -  config.isCompatibleComponent(podinfo-too-chart, true)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [92m[92m  ✔ [0m[0m [92m[92mAll of the checksums matched![0m[0m
                                                                                                                                                                                                                                                                                                                       [92m[92m  ✔ [0m[0m [92m[92mLoading Zarf Package zarf-package-podinfos-amd64-0.0.1.tar.zst[0m[0m
[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  k8s.NewK8sClient()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  &v1.NodeList{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ListMeta:v1.ListMeta{SelfLink:"", ResourceVersion:"4984", Continue:"", RemainingItemCount:(*int64)(nil)}, Items:[]v1.Node{v1.Node{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"k3d-k3s-default-server-0", GenerateName:"", Namespace:"", SelfLink:"", UID:"fa7b2f23-5351-4882-a145-1f0bc66c471f", ResourceVersion:"4661", Generation:0, CreationTimestamp:time.Date(2023, time.May, 17, 15, 20, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"beta.kubernetes.io/arch":"amd64", "beta.kubernetes.io/instance-type":"k3s", "beta.kubernetes.io/os":"linux", "egress.k3s.io/cluster":"true", "kubernetes.io/arch":"amd64", "kubernetes.io/hostname":"k3d-k3s-default-server-0", "kubernetes.io/os":"linux", "node-role.kubernetes.io/control-plane":"true", "node-role.kubernetes.io/master":"true", "node.kubernetes.io/instance-type":"k3s"}, Annotations:map[string]string{"flannel.alpha.coreos.com/backend-data":"{\"VNI\":1,\"VtepMAC\":\"32:54:a0:f3:a6:2c\"}", "flannel.alpha.coreos.com/backend-type":"vxlan", "flannel.alpha.coreos.com/kube-subnet-manager":"true", "flannel.alpha.coreos.com/public-ip":"172.23.0.2", "k3s.io/hostname":"k3d-k3s-default-server-0", "k3s.io/internal-ip":"172.23.0.2", "k3s.io/node-args":"[\"server\",\"--tls-san\",\"0.0.0.0\"]", "k3s.io/node-config-hash":"D7CBSUVNY5FSJVW3U5ZIAK74FHUOS5TZOOMQE6FTIWUTHA7QHGKQ====", "k3s.io/node-env":"{\"K3S_KUBECONFIG_OUTPUT\":\"/output/kubeconfig.yaml\",\"K3S_TOKEN\":\"********\"}", "node.alpha.kubernetes.io/ttl":"0", "volumes.kubernetes.io/controller-managed-attach-detach":"true"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string{"wrangler.cattle.io/node"}, ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"deploy@k3d-k3s-default-server-0", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.May, 17, 15, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000011d58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.May, 17, 15, 20, 22, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000011d88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.May, 17, 15, 20, 38, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000011db8), Subresource:"status"}}}, Spec:v1.NodeSpec{PodCIDR:"10.42.0.0/24", PodCIDRs:[]string{"10.42.0.0/24"}, ProviderID:"k3s://k3d-k3s-default-server-0", Unschedulable:false, Taints:[]v1.Taint(nil), ConfigSource:(*v1.NodeConfigSource)(nil), DoNotUseExternalID:""}, Status:v1.NodeStatus{Capacity:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:20, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"20", Format:"DecimalSI"}, "ephemeral-storage":resource.Quantity{i:resource.int64Amount{value:710647070720, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}, "hugepages-1Gi":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "hugepages-2Mi":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:67103211520, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}, "pods":resource.Quantity{i:resource.int64Amount{value:110, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"110", Format:"DecimalSI"}}, Allocatable:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:20, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"20", Format:"DecimalSI"}, "ephemeral-storage":resource.Quantity{i:resource.int64Amount{value:675114716655, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"675114716655", Format:"DecimalSI"}, "hugepages-1Gi":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "hugepages-2Mi":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:67103211520, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}, "pods":resource.Quantity{i:resource.int64Amount{value:110, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"110", Format:"DecimalSI"}}, Phase:"", Conditions:[]v1.NodeCondition{v1.NodeCondition{Type:"MemoryPressure", Status:"False", LastHeartbeatTime:time.Date(2023, time.May, 17, 15, 39, 1, 0, time.Local), LastTransitionTime:time.Date(2023, time.May, 17, 15, 20, 7, 0, time.Local), Reason:"KubeletHasSufficientMemory", Message:"kubelet has sufficient memory available"}, v1.NodeCondition{Type:"DiskPressure", Status:"False", LastHeartbeatTime:time.Date(2023, time.May, 17, 15, 39, 1, 0, time.Local), LastTransitionTime:time.Date(2023, time.May, 17, 15, 20, 7, 0, time.Local), Reason:"KubeletHasNoDiskPressure", Message:"kubelet has no disk pressure"}, v1.NodeCondition{Type:"PIDPressure", Status:"False", LastHeartbeatTime:time.Date(2023, time.May, 17, 15, 39, 1, 0, time.Local), LastTransitionTime:time.Date(2023, time.May, 17, 15, 20, 7, 0, time.Local), Reason:"KubeletHasSufficientPID", Message:"kubelet has sufficient PID available"}, v1.NodeCondition{Type:"Ready", Status:"True", LastHeartbeatTime:time.Date(2023, time.May, 17, 15, 39, 1, 0, time.Local), LastTransitionTime:time.Date(2023, time.May, 17, 15, 20, 18, 0, time.Local), Reason:"KubeletReady", Message:"kubelet is posting ready status"}}, Addresses:[]v1.NodeAddress{v1.NodeAddress{Type:"InternalIP", Address:"172.23.0.2"}, v1.NodeAddress{Type:"Hostname", Address:"k3d-k3s-default-server-0"}}, DaemonEndpoints:v1.NodeDaemonEndpoints{KubeletEndpoint:v1.DaemonEndpoint{Port:10250}}, NodeInfo:v1.NodeSystemInfo{MachineID:"", SystemUUID:"39343836-3432-3739-3639-643234663939", BootID:"79f79eec-091a-4a04-9b64-f44637931f2e", KernelVersion:"5.19.0-41-generic", OSImage:"K3s dev", ContainerRuntimeVersion:"containerd://1.6.6-k3s1", KubeletVersion:"v1.24.4+k3s1", KubeProxyVersion:"v1.24.4+k3s1", OperatingSystem:"linux", Architecture:"amd64"}, Images:[]v1.ContainerImage{v1.ContainerImage{Names:[]string{"127.0.0.1:31999/gitea/gitea@sha256:8d76f3c4aad9a61cf00bd76c25a05732e721ec84deeae0f480f181965863b427", "127.0.0.1:31999/gitea/gitea:1.18.5-zarf-3431384023"}, SizeBytes:111786057}, v1.ContainerImage{Names:[]string{"docker.io/rancher/klipper-helm@sha256:6a8e819402e3fdd5ff9ec576174b6c0013870b9c0627a05fa0ab17374b5cf189", "docker.io/rancher/klipper-helm:v0.7.3-build20220613"}, SizeBytes:82983731}, v1.ContainerImage{Names:[]string{"127.0.0.1:31999/defenseunicorns/zarf/agent@sha256:b9d1d621bcd6e71a142e8d5bebf8c755b7c36b95c6140d713d93fe48761417a1", "127.0.0.1:31999/defenseunicorns/zarf/agent:v0.26.3"}, SizeBytes:45509550}, v1.ContainerImage{Names:[]string{"docker.io/rancher/mirrored-library-traefik@sha256:ad2226527eea71b7591d5e9dcc0bffd0e71b2235420c34f358de6db6d529561f", "docker.io/rancher/mirrored-library-traefik:2.6.2"}, SizeBytes:30348500}, v1.ContainerImage{Names:[]string{"127.0.0.1:31999/stefanprodan/podinfo@sha256:a313e161d50597014db8d0fb1cf663424c13756d01ff4a0882025a6e0281209a", "127.0.0.1:31999/stefanprodan/podinfo:6.3.6-zarf-2985051089"}, SizeBytes:27998183}, v1.ContainerImage{Names:[]string{"docker.io/rancher/mirrored-metrics-server@sha256:48ecad4fe641a09fa4459f93c7ad29d4916f6b9cf7e934d548f1d8eff96e2f35", "docker.io/rancher/mirrored-metrics-server:v0.5.2"}, SizeBytes:26022698}, v1.ContainerImage{Names:[]string{"docker.io/rancher/mirrored-coredns-coredns@sha256:35e38f3165a19cb18c65d83334c13d61db6b24905f45640aa8c2d2a6f55ebcb0", "docker.io/rancher/mirrored-coredns-coredns:1.9.1"}, SizeBytes:14111376}, v1.ContainerImage{Names:[]string{"docker.io/rancher/local-path-provisioner@sha256:1da612c913ce0b4ab82e20844baa9dce1f7065e39412d6a0bb4de99c413f21bf", "docker.io/rancher/local-path-provisioner:v0.0.21"}, SizeBytes:11434864}, v1.ContainerImage{Names:[]string{"127.0.0.1:31999/library/registry@sha256:85d4cd48754d4e8e4d4fe933bbde017d969e0e20775507add9faca39064bf9b0", "127.0.0.1:32125/library/registry@sha256:85d4cd48754d4e8e4d4fe933bbde017d969e0e20775507add9faca39064bf9b0", "127.0.0.1:31999/library/registry:2.8.1", "127.0.0.1:32125/library/registry:2.8.1"}, SizeBytes:9794099}, v1.ContainerImage{Names:[]string{"docker.io/rancher/klipper-lb@sha256:02f8cb41d53fe08b5726a563ce36c3675ad7f2694b65a8477f6a66afac89fef7", "docker.io/rancher/klipper-lb:v0.3.5"}, SizeBytes:3334605}, v1.ContainerImage{Names:[]string{"docker.io/rancher/mirrored-library-busybox@sha256:125dfcbe72a0158c16781d3ad254c0d226a6534b59cc7c2bf549cdd50c6e8989", "docker.io/rancher/mirrored-library-busybox:1.34.1"}, SizeBytes:2591896}, v1.ContainerImage{Names:[]string{"docker.io/rancher/mirrored-pause@sha256:74c4244427b7312c5b901fe0f67cbc53683d06f4f24c6faee65d4182bf0fa893", "docker.io/rancher/mirrored-pause:3.6"}, SizeBytes:301463}}, VolumesInUse:[]v1.UniqueVolumeName(nil), VolumesAttached:[]v1.AttachedVolume(nil), Config:(*v1.NodeConfigStatus)(nil)}}}}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

[96mkind[0m:[95m ZarfPackageConfig[0m
[95m[0m[96mmetadata[0m:[96m[0m
[96m  name[0m:[95m podinfos[0m
[95m  [0m[96mdescription[0m:[95m Podinfos[0m
[95m  [0m[96mversion[0m:[95m 0.0.1[0m
[95m  [0m[96murl[0m:[95m https://github.com/stefanprodan/podinfo[0m
[95m  [0m[96mimage[0m:[95m https://raw.githubusercontent.com/stefanprodan/podinfo/gh-pages/screens/podinfo-ui-v3.png[0m
[95m  [0m[96marchitecture[0m:[95m amd64[0m
[95m  [0m[96maggregateChecksum[0m:[95m 8035f27a36029d45cde03064999fa628c013608caf5b6a595e1cdc3766cd43de[0m
[95m[0m[96mbuild[0m:[96m[0m
[96m  terminal[0m:[95m palassis-razer[0m
[95m  [0m[96muser[0m:[95m palassis[0m
[95m  [0m[96marchitecture[0m:[95m amd64[0m
[95m  [0m[96mtimestamp[0m:[95m Wed, 17 May 2023 14:49:24 -0400[0m
[95m  [0m[96mversion[0m:[95m v0.26.3[0m
[95m  [0m[96mmigrations[0m:
  -[95m scripts-to-actions[0m
[95m  [0m-[95m pluralize-set-variable[0m
[95m  [0m[96mdifferential[0m:[97m false[0m
[97m  [0m[96mregistryOverrides[0m: {}[96m[0m
[96mcomponents[0m:
-[96m name[0m:[95m k8s-manifests[0m
[95m  [0m[96mrequired[0m:[97m true[0m
[97m  [0m[96mmanifests[0m:
  -[96m name[0m:[95m podinfo-k8s-manifests[0m
[95m    [0m[96mfiles[0m:
    -[95m k8s-manifests/podinfo-k8s-manifests.yaml[0m
[95m[0m-[96m name[0m:[95m podinfo-chart[0m
[95m  [0m[96mrequired[0m:[97m true[0m
[97m  [0m[96mcharts[0m:
  -[96m name[0m:[95m podinfo[0m
[95m    [0m[96mreleaseName[0m:[95m podinfo[0m
[95m    [0m[96murl[0m:[95m oci://ghcr.io/stefanprodan/charts/podinfo[0m
[95m    [0m[96mversion[0m:[95m 6.3.6[0m
[95m    [0m[96mnamespace[0m:[95m podinfo[0m
[95m    [0m[96mvaluesFiles[0m:
    -[95m values/podinfo-values.yaml[0m
[95m  [0m[96mimages[0m:
  -[95m ghcr.io/stefanprodan/podinfo:6.3.6[0m
[95m[0m-[96m name[0m:[95m podinfo-too-chart[0m
[95m  [0m[96mrequired[0m:[97m true[0m
[97m  [0m[96mcharts[0m:
  -[96m name[0m:[95m podinfo-too[0m
[95m    [0m[96mreleaseName[0m:[95m podinfo-too[0m
[95m    [0m[96murl[0m:[95m oci://ghcr.io/stefanprodan/charts/podinfo[0m
[95m    [0m[96mversion[0m:[95m 6.3.6[0m
[95m    [0m[96mnamespace[0m:[95m podinfo-too[0m
[95m    [0m[96mvaluesFiles[0m:
    -[95m values/podinfo-too-values.yaml[0m
[95m  [0m[96mimages[0m:
  -[95m ghcr.io/stefanprodan/podinfo:6.3.6[0m
[95m[0m[96mvariables[0m:
-[96m name[0m:[95m PODINFO_TOO_COLOR[0m
[95m  [0m[96mdefault[0m:[95m "#000000"[0m

[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
[33m[0m
[33mThis package has 1 artifacts with software bill-of-materials (SBOM) included. You can view them now[0m
[33min the zarf-sbom folder in this directory or to go directly to one, open this in your browser:[0m
[33m[37m[1m/home/palassis/GITHUB/MxNxPx/zarf-podinfos/zarf-sbom/sbom-viewer-ghcr.io_stefanprodan_podinfo_6.3.6.html[0m[33m[37m[0m[33m[0m
[33m[0m
[33m* This directory will be removed after package deployment.[0m
[33m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  k8s.NewK8sClient()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m
[33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m
[33m[0m[92m[92m  ✔ [0m[0m [92m[92mDeploy Zarf package confirmed[0m[0m
[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  packager.getValidComponents()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  packager.appendIfNotExists([]string(nil), k8s-manifests)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  packager.appendIfNotExists([]string{"k8s-manifests"}, podinfo-chart)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  packager.appendIfNotExists([]string{"k8s-manifests", "podinfo-chart"}, podinfo-too-chart)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  packager.isRequiredOrRequested(types.ZarfComponent{Name:"k8s-manifests", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart(nil), Manifests:[]types.ZarfManifest{types.ZarfManifest{Name:"podinfo-k8s-manifests", Namespace:"", Files:[]string{"k8s-manifests/podinfo-k8s-manifests.yaml"}, KustomizeAllowAnyDirectory:false, Kustomizations:[]string(nil), NoWait:false}}, Images:[]string(nil), Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}, []string{})[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  packager.isRequiredOrRequested(types.ZarfComponent{Name:"podinfo-chart", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart{types.ZarfChart{Name:"podinfo", ReleaseName:"podinfo", URL:"oci://ghcr.io/stefanprodan/charts/podinfo", Version:"6.3.6", Namespace:"podinfo", ValuesFiles:[]string{"values/podinfo-values.yaml"}, GitPath:"", LocalPath:"", NoWait:false}}, Manifests:[]types.ZarfManifest(nil), Images:[]string{"ghcr.io/stefanprodan/podinfo:6.3.6"}, Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}, []string{})[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  packager.isRequiredOrRequested(types.ZarfComponent{Name:"podinfo-too-chart", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart{types.ZarfChart{Name:"podinfo-too", ReleaseName:"podinfo-too", URL:"oci://ghcr.io/stefanprodan/charts/podinfo", Version:"6.3.6", Namespace:"podinfo-too", ValuesFiles:[]string{"values/podinfo-too-values.yaml"}, GitPath:"", LocalPath:"", NoWait:false}}, Manifests:[]types.ZarfManifest(nil), Images:[]string{"ghcr.io/stefanprodan/podinfo:6.3.6"}, Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}, []string{})[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  packager.validateRequests([]types.ZarfComponent{types.ZarfComponent{Name:"k8s-manifests", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart(nil), Manifests:[]types.ZarfManifest{types.ZarfManifest{Name:"podinfo-k8s-manifests", Namespace:"", Files:[]string{"k8s-manifests/podinfo-k8s-manifests.yaml"}, KustomizeAllowAnyDirectory:false, Kustomizations:[]string(nil), NoWait:false}}, Images:[]string(nil), Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}, types.ZarfComponent{Name:"podinfo-chart", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart{types.ZarfChart{Name:"podinfo", ReleaseName:"podinfo", URL:"oci://ghcr.io/stefanprodan/charts/podinfo", Version:"6.3.6", Namespace:"podinfo", ValuesFiles:[]string{"values/podinfo-values.yaml"}, GitPath:"", LocalPath:"", NoWait:false}}, Manifests:[]types.ZarfManifest(nil), Images:[]string{"ghcr.io/stefanprodan/podinfo:6.3.6"}, Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}, types.ZarfComponent{Name:"podinfo-too-chart", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart{types.ZarfChart{Name:"podinfo-too", ReleaseName:"podinfo-too", URL:"oci://ghcr.io/stefanprodan/charts/podinfo", Version:"6.3.6", Namespace:"podinfo-too", ValuesFiles:[]string{"values/podinfo-too-values.yaml"}, GitPath:"", LocalPath:"", NoWait:false}}, Manifests:[]types.ZarfManifest(nil), Images:[]string{"ghcr.io/stefanprodan/podinfo:6.3.6"}, Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}}, []string{}, []string(nil))[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  template.Generate()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/template/template.go:28)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  packager.deployComponent(types.TempPaths{Base:"/tmp/zarf-3322082491", InjectBinary:"/tmp/zarf-3322082491/zarf-injector", SeedImages:"/tmp/zarf-3322082491/seed-images", Images:"/tmp/zarf-3322082491/images", Components:"/tmp/zarf-3322082491/components", SbomTar:"/tmp/zarf-3322082491/sboms.tar", Sboms:"/tmp/zarf-3322082491/sboms", ZarfYaml:"/tmp/zarf-3322082491/zarf.yaml", ZarfSig:"/tmp/zarf-3322082491/zarf.yaml.sig", Checksums:"/tmp/zarf-3322082491/checksums.txt"}, types.ZarfComponent{Name:"k8s-manifests", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart(nil), Manifests:[]types.ZarfManifest{types.ZarfManifest{Name:"podinfo-k8s-manifests", Namespace:"", Files:[]string{"k8s-manifests/podinfo-k8s-manifests.yaml"}, KustomizeAllowAnyDirectory:false, Kustomizations:[]string(nil), NoWait:false}}, Images:[]string(nil), Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  packager.createComponentPaths({[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "name": "k8s-manifests",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "required": true,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "only": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "cluster": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "import": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "path": ""[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "scripts": {},[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "actions": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "onCreate": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "defaults": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m        "shell": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "onDeploy": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "defaults": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m        "shell": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "onRemove": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "defaults": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m        "shell": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "manifests": [[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "name": "podinfo-k8s-manifests",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "files": [[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m        "k8s-manifests/podinfo-k8s-manifests.yaml"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      ][0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  ],[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "extensions": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m})[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m
[100m[100m                                                                                       [0m[0m
[100m[100m[97m[97m  📦 K8S-MANIFESTS COMPONENT                                                           [0m[100m[0m[100m[0m[0m
[100m[100m                                                                                       [0m[0m

[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:33-04:00  -  k8s.NewK8sClient()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mWaiting for cluster connection (30s timeout)[0m[0m[90m[90m (0s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mWaiting for cluster connection (30s timeout)[0m[0m[90m[90m (0s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠹ [0m[0m [97m[97mWaiting for cluster connection (30s timeout)[0m[0m[90m[90m (0s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mWaiting for cluster connection (30s timeout)[0m[0m[90m[90m (1s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠼ [0m[0m [97m[97mWaiting for cluster connection (30s timeout)[0m[0m[90m[90m (1s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠴ [0m[0m [97m[97mWaiting for cluster connection (30s timeout)[0m[0m[90m[90m (1s)[0m[0m                                                                                                                                                                                                                                                                                                                       [92m[92m  ✔ [0m[0m [92m[92mWaiting for cluster connection (30s timeout)[0m[0m
[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  k8s.LoadZarfState()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/state.go:151)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mLoading the Zarf State from the Kubernetes cluster[0m[0m[90m[90m (0s)[0m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  ZarfState = {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "zarfAppliance": false,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "distro": "k3d",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "architecture": "amd64",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "storageClass": "local-path",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "agentTLS": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "ca": "KipzYW5pdGl6ZWQqKg==",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "cert": "KipzYW5pdGl6ZWQqKg==",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "key": "KipzYW5pdGl6ZWQqKg=="[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "gitServer": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullUsername": "zarf-git-read-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "http://zarf-gitea-http.zarf.svc.cluster.local:3000",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalServer": true[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "registryInfo": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-push",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullUsername": "zarf-pull",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "127.0.0.1:31999",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "nodePort": 31999,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalRegistry": true,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "secret": "**sanitized**"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "artifactServer": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "f4bb14541cf0525e9085cef59b08196497e5c7d2",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "http://zarf-gitea-http.zarf.svc.cluster.local:3000/api/packages/zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalServer": true[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "loggingSecret": "**sanitized**"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  template.Generate()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/template/template.go:28)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [92m[92m  ✔ [0m[0m [92m[92mLoading the Zarf State from the Kubernetes cluster[0m[0m
[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  helm.GenerateChart(types.ZarfManifest{Name:"podinfo-k8s-manifests", Namespace:"default", Files:[]string{"k8s-manifests/podinfo-k8s-manifests.yaml"}, KustomizeAllowAnyDirectory:false, Kustomizations:[]string(nil), NoWait:false})[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m[0m[0m [97m[97mProcessing k8s-manifests/podinfo-k8s-manifests.yaml[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mProcessing k8s-manifests/podinfo-k8s-manifests.yaml[0m[0m[90m[90m (0s)[0m[0m                                                                                                                                                                                                                                                                                                                       [92m[92m  ✔ [0m[0m [92m[92mStarting helm chart generation podinfo-k8s-manifests[0m[0m
                                                                                                                                                                                                                                                                                                                       [30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  helm.NewRenderer()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m  ⠋ [0m[0m [97m[97mProcessing helm chart raw-podinfos-k8s-manifests-podinfo-k8s-manifests:0.1.1684352552 from Zarf-generated helm chart[0m[0m[90m[90m (0s)[0m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  template.Generate()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/template/template.go:28)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mAttempt 1 of 4 to install chart[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mgetting history for release zarf-3ba16f5660b5461f8c3e7a53383b58aeba5a496e[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mgetting history for release zarf-3ba16f5660b5461f8c3e7a53383b58aeba5a496e[0m[0m[90m[90m (0s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mChecking for existing helm deployment[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mAttempting chart upgrade[0m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  helm.upgradeChart(&action.Configuration{RESTClientGetter:(*genericclioptions.ConfigFlags)(0xc0024c4360), Releases:(*storage.Storage)(0xc00247b420), KubeClient:(*kube.Client)(0xc002475a10), RegistryClient:(*registry.Client)(nil), Capabilities:(*chartutil.Capabilities)(nil), Log:(func(string, ...interface {}))(0x2573f60)}, types.ConnectStrings{}, map[string]*v1.Namespace{"default":(*v1.Namespace)(0xc00017da20)}, &helm.Helm{BasePath:"/tmp/zarf-3322082491/components/k8s-manifests/manifests", Chart:types.ZarfChart{Name:"raw-podinfos-k8s-manifests-podinfo-k8s-manifests", ReleaseName:"zarf-3ba16f5660b5461f8c3e7a53383b58aeba5a496e", URL:"", Version:"0.1.1684352552", Namespace:"default", ValuesFiles:[]string(nil), GitPath:"", LocalPath:"", NoWait:false}, ReleaseName:"zarf-3ba16f5660b5461f8c3e7a53383b58aeba5a496e", ChartLoadOverride:"", ChartOverride:(*chart.Chart)(0xc0010dff40), ValueOverride:map[string]interface {}{}, Component:types.ZarfComponent{Name:"k8s-manifests", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart(nil), Manifests:[]types.ZarfManifest{types.ZarfManifest{Name:"podinfo-k8s-manifests", Namespace:"", Files:[]string{"k8s-manifests/podinfo-k8s-manifests.yaml"}, KustomizeAllowAnyDirectory:false, Kustomizations:[]string(nil), NoWait:false}}, Images:[]string(nil), Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}, Cluster:(*cluster.Cluster)(0xc000595060), Cfg:(*types.PackagerConfig)(0x7599a20), actionConfig:(*action.Configuration)(0xc002487a40)}, values:template.Values{ registry: "127.0.0.1:31999" })[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  helm.loadChartData()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mpreparing upgrade for zarf-3ba16f5660b5461f8c3e7a53383b58aeba5a496e[0m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  helm.Run(renderedManifests *bytes.Buffer)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  Using temp path: '/tmp/zarf-2294733599'[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  template.Apply(types.ZarfComponent{Name:"k8s-manifests", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart(nil), Manifests:[]types.ZarfManifest{types.ZarfManifest{Name:"podinfo-k8s-manifests", Namespace:"", Files:[]string{"k8s-manifests/podinfo-k8s-manifests.yaml"}, KustomizeAllowAnyDirectory:false, Kustomizations:[]string(nil), NoWait:false}}, Images:[]string(nil), Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}, /tmp/zarf-2294733599/chart.yaml)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  templateMap = { "###ZARF_REGISTRY###": "127.0.0.1:31999", "###ZARF_NODEPORT###": "31999", "###ZARF_VAR_PODINFO_TOO_COLOR###": "#ffffff", "###ZARF_GIT_AUTH_PUSH###": "**sanitized**", "###ZARF_GIT_PULL###": "zarf-git-read-user", "###ZARF_GIT_AUTH_PULL###": "**sanitized**", "###ZARF_STORAGE_CLASS###": "local-path", "###ZARF_REGISTRY_AUTH_PULL###": "**sanitized**", "###ZARF_GIT_PUSH###": "zarf-git-user", "###ZARF_REGISTRY_AUTH_PUSH###": "**sanitized**",  }[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/template/template.go:184)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  deprecations = map[string]string{"###ZARF_DATA_INJECTON_MARKER###":"###ZARF_DATA_INJECTION_MARKER###"}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  Matched helm namespace podinfo for zarf annotation[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  Matched helm namespace podinfo-too for zarf annotation[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  k8s.GenerateRegistryPullCreds(podinfo, private-registry)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  k8s.LoadZarfState()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/state.go:151)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  ZarfState = {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "zarfAppliance": false,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "distro": "k3d",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "architecture": "amd64",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "storageClass": "local-path",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "agentTLS": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "ca": "KipzYW5pdGl6ZWQqKg==",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "cert": "KipzYW5pdGl6ZWQqKg==",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "key": "KipzYW5pdGl6ZWQqKg=="[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "gitServer": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullUsername": "zarf-git-read-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "http://zarf-gitea-http.zarf.svc.cluster.local:3000",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalServer": true[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "registryInfo": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-push",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullUsername": "zarf-pull",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "127.0.0.1:31999",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "nodePort": 31999,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalRegistry": true,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "secret": "**sanitized**"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "artifactServer": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "f4bb14541cf0525e9085cef59b08196497e5c7d2",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "http://zarf-gitea-http.zarf.svc.cluster.local:3000/api/packages/zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalServer": true[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "loggingSecret": "**sanitized**"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  k8s.GenerateRegistryPullCreds(podinfo-too, private-registry)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  k8s.LoadZarfState()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/state.go:151)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  ZarfState = {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "zarfAppliance": false,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "distro": "k3d",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "architecture": "amd64",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "storageClass": "local-path",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "agentTLS": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "ca": "KipzYW5pdGl6ZWQqKg==",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "cert": "KipzYW5pdGl6ZWQqKg==",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "key": "KipzYW5pdGl6ZWQqKg=="[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "gitServer": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullUsername": "zarf-git-read-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "http://zarf-gitea-http.zarf.svc.cluster.local:3000",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalServer": true[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "registryInfo": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-push",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullUsername": "zarf-pull",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "127.0.0.1:31999",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "nodePort": 31999,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalRegistry": true,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "secret": "**sanitized**"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "artifactServer": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "f4bb14541cf0525e9085cef59b08196497e5c7d2",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "http://zarf-gitea-http.zarf.svc.cluster.local:3000/api/packages/zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalServer": true[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "loggingSecret": "**sanitized**"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  k8s.GenerateRegistryPullCreds(default, private-registry)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  k8s.LoadZarfState()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/state.go:151)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  ZarfState = {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "zarfAppliance": false,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "distro": "k3d",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "architecture": "amd64",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "storageClass": "local-path",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "agentTLS": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "ca": "KipzYW5pdGl6ZWQqKg==",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "cert": "KipzYW5pdGl6ZWQqKg==",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "key": "KipzYW5pdGl6ZWQqKg=="[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "gitServer": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullUsername": "zarf-git-read-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "http://zarf-gitea-http.zarf.svc.cluster.local:3000",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalServer": true[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "registryInfo": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-push",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullUsername": "zarf-pull",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "127.0.0.1:31999",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "nodePort": 31999,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalRegistry": true,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "secret": "**sanitized**"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "artifactServer": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "f4bb14541cf0525e9085cef59b08196497e5c7d2",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "http://zarf-gitea-http.zarf.svc.cluster.local:3000/api/packages/zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalServer": true[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "loggingSecret": "**sanitized**"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠹ [0m[0m [97m[97mpreparing upgrade for zarf-3ba16f5660b5461f8c3e7a53383b58aeba5a496e[0m[0m[90m[90m (0s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠹ [0m[0m [97m[97mperforming update for zarf-3ba16f5660b5461f8c3e7a53383b58aeba5a496e[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠹ [0m[0m [97m[97mcreating upgraded release for zarf-3ba16f5660b5461f8c3e7a53383b58aeba5a496e[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠹ [0m[0m [97m[97mchecking 1 resources for changes[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠹ [0m[0m [97m[97mPatch Secret "podinfo-tls-secret" in namespace podinfo-too[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠹ [0m[0m [97m[97mwaiting for release zarf-3ba16f5660b5461f8c3e7a53383b58aeba5a496e resources (created: 0 updated: 1  deleted: 0)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠹ [0m[0m [97m[97mbeginning wait for 1 resources with timeout of 15m0s[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠹ [0m[0m [97m[97mupdating status for upgraded release for zarf-3ba16f5660b5461f8c3e7a53383b58aeba5a496e[0m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  Upgrade complete[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/helm/chart.go:130)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [92m[92m  ✔ [0m[0m [92m[92mProcessing helm chart raw-podinfos-k8s-manifests-podinfo-k8s-manifests:0.1.1684352552 from Zarf-generated helm chart[0m[0m
[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  packager.deployComponent(types.TempPaths{Base:"/tmp/zarf-3322082491", InjectBinary:"/tmp/zarf-3322082491/zarf-injector", SeedImages:"/tmp/zarf-3322082491/seed-images", Images:"/tmp/zarf-3322082491/images", Components:"/tmp/zarf-3322082491/components", SbomTar:"/tmp/zarf-3322082491/sboms.tar", Sboms:"/tmp/zarf-3322082491/sboms", ZarfYaml:"/tmp/zarf-3322082491/zarf.yaml", ZarfSig:"/tmp/zarf-3322082491/zarf.yaml.sig", Checksums:"/tmp/zarf-3322082491/checksums.txt"}, types.ZarfComponent{Name:"podinfo-chart", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart{types.ZarfChart{Name:"podinfo", ReleaseName:"podinfo", URL:"oci://ghcr.io/stefanprodan/charts/podinfo", Version:"6.3.6", Namespace:"podinfo", ValuesFiles:[]string{"values/podinfo-values.yaml"}, GitPath:"", LocalPath:"", NoWait:false}}, Manifests:[]types.ZarfManifest(nil), Images:[]string{"ghcr.io/stefanprodan/podinfo:6.3.6"}, Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  packager.createComponentPaths({[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "name": "podinfo-chart",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "required": true,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "only": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "cluster": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "import": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "path": ""[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "scripts": {},[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "actions": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "onCreate": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "defaults": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m        "shell": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "onDeploy": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "defaults": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m        "shell": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "onRemove": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "defaults": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m        "shell": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "charts": [[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "name": "podinfo",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "releaseName": "podinfo",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "url": "oci://ghcr.io/stefanprodan/charts/podinfo",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "version": "6.3.6",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "namespace": "podinfo",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "valuesFiles": [[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m        "values/podinfo-values.yaml"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      ][0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  ],[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "images": [[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "ghcr.io/stefanprodan/podinfo:6.3.6"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  ],[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "extensions": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m})[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m
[100m[100m                                                                                       [0m[0m
[100m[100m[97m[97m  📦 PODINFO-CHART COMPONENT                                                           [0m[100m[0m[100m[0m[0m
[100m[100m                                                                                       [0m[0m

[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  images.PushToZarfRegistry()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/images/push.go:24)[0m
[90m[0m[96m[96mPushing 1 images to the zarf registry[0m[0m  [38;2;255;0;0m0%[0m | 0s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  crane pushOptions = []crane.Option{(crane.Option)(0x17b6aa0), (crane.Option)(0x17b69c0), (crane.Option)(0x29ea280), (crane.Option)(0x29ea160)}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96mPushing 1 images to the zarf registry[0m[0m  [38;2;255;0;0m0%[0m | 0s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 0s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  tunnel.NewTunnel(zarf, svc, , 0, 0)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 0s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:34-04:00  -  k8s.NewK8sClient()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 0s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:35-04:00  -  tunnel.Connect(REGISTRY, false)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 1s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:35-04:00  -  tunnel.Establish()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/tunnel.go:378)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 1s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:35-04:00  -  Requested local port is 0. Selecting an open port on host system[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 1s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:35-04:00  -  tunnel.GetAvailablePort()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/utils/network.go:147)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 1s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:35-04:00  -  Selected port 38065[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 1s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:35-04:00  -  Opening tunnel 38065 -> 5000 for svc/zarf-docker-registry in namespace zarf[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/tunnel.go:415)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 1s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:35-04:00  -  k8s.NewK8sClient()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 1s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:36-04:00  -  tunnel.getAttachablePodForResource()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/tunnel.go:485)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:36-04:00  -  tunnel.getAttachablePodForService()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/tunnel.go:498)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:36-04:00  -  Testing pod zarf-docker-registry-548dd476c8-ns2hb[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:36-04:00  -  v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"zarf-docker-registry-548dd476c8-ns2hb", GenerateName:"zarf-docker-registry-548dd476c8-", Namespace:"zarf", SelfLink:"", UID:"18702aee-2c26-4b82-b6e8-124d1920fe6b", ResourceVersion:"4816", Generation:0, CreationTimestamp:time.Date(2023, time.May, 17, 15, 42, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"docker-registry", "pod-template-hash":"548dd476c8", "release":"zarf-docker-registry", "zarf.dev/agent":"ignore"}, Annotations:map[string]string{"checksum/secret":"f2daf6b8d8fbfc91a178326a6fae3699706d4ce05883374d7f5ce4320a005e97"}, OwnerReferences:[]v1.OwnerReference{v1.OwnerReference{APIVersion:"apps/v1", Kind:"ReplicaSet", Name:"zarf-docker-registry-548dd476c8", UID:"1afc438d-79d0-4422-86f2-b4f3abbb19ab", Controller:(*bool)(0xc002f8b2ba), BlockOwnerDeletion:(*bool)(0xc002f8b2bb)}}, Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.May, 17, 15, 42, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002f94c78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.May, 17, 15, 42, 2, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002f94ca8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"config", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(0xc002698640), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}, v1.Volume{Name:"data", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(0xc002f94cf0), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}, v1.Volume{Name:"kube-api-access-tnpxm", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc002f96420), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"docker-registry", Image:"127.0.0.1:31999/library/registry:2.8.1", Command:[]string{"/bin/registry", "serve", "/etc/docker/registry/config.yml"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"REGISTRY_AUTH", Value:"htpasswd", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_AUTH_HTPASSWD_REALM", Value:"Registry Realm", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_AUTH_HTPASSWD_PATH", Value:"/etc/docker/registry/htpasswd", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY", Value:"/var/lib/registry", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:3, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"3", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:268435456, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"data", ReadOnly:false, MountPath:"/var/lib/registry/", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"config", ReadOnly:false, MountPath:"/etc/docker/registry", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"kube-api-access-tnpxm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(0xc002698840), ReadinessProbe:(*v1.Probe)(0xc0026988c0), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002f8b448), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k3d-k3s-default-server-0", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc002fa6460), ImagePullSecrets:[]v1.LocalObjectReference{v1.LocalObjectReference{Name:"private-registry"}}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(0xc002f94e58), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002f8b4d0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002f8b4f0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"system-node-critical", Priority:(*int32)(0xc002f8b4fc), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002f8b50a), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0026c0c90), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Running", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 42, 1, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Ready", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 42, 2, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"ContainersReady", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 42, 2, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 42, 1, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.23.0.2", PodIP:"10.42.0.103", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.0.103"}}, StartTime:time.Date(2023, time.May, 17, 15, 42, 1, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus(nil), ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"docker-registry", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(0xc002f94f30), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:true, RestartCount:0, Image:"127.0.0.1:31999/library/registry:2.8.1", ImageID:"127.0.0.1:31999/library/registry@sha256:85d4cd48754d4e8e4d4fe933bbde017d969e0e20775507add9faca39064bf9b0", ContainerID:"containerd://acad36fdcd1f185021902ced0b2b5b297cf7574615a2d0eae1b667d5d84ceabd", Started:(*bool)(0xc002f8b56a)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:36-04:00  -  Testing for pod only, phase: Running[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:36-04:00  -  Testing pod zarf-docker-registry-548dd476c8-7sh4p[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:36-04:00  -  v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"zarf-docker-registry-548dd476c8-7sh4p", GenerateName:"zarf-docker-registry-548dd476c8-", Namespace:"zarf", SelfLink:"", UID:"d1342f0f-7cae-4585-ba89-e964998994f7", ResourceVersion:"1384", Generation:0, CreationTimestamp:time.Date(2023, time.May, 17, 15, 24, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"docker-registry", "pod-template-hash":"548dd476c8", "release":"zarf-docker-registry", "zarf.dev/agent":"ignore"}, Annotations:map[string]string{"checksum/secret":"f2daf6b8d8fbfc91a178326a6fae3699706d4ce05883374d7f5ce4320a005e97"}, OwnerReferences:[]v1.OwnerReference{v1.OwnerReference{APIVersion:"apps/v1", Kind:"ReplicaSet", Name:"zarf-docker-registry-548dd476c8", UID:"1afc438d-79d0-4422-86f2-b4f3abbb19ab", Controller:(*bool)(0xc002f8af2a), BlockOwnerDeletion:(*bool)(0xc002f8af2b)}}, Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.May, 17, 15, 24, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002f948e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.May, 17, 15, 25, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002f94918), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"config", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(0xc002698300), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}, v1.Volume{Name:"data", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(0xc002f94960), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}, v1.Volume{Name:"kube-api-access-pn8ss", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc002f963c0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"docker-registry", Image:"127.0.0.1:31999/library/registry:2.8.1", Command:[]string{"/bin/registry", "serve", "/etc/docker/registry/config.yml"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"REGISTRY_AUTH", Value:"htpasswd", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_AUTH_HTPASSWD_REALM", Value:"Registry Realm", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_AUTH_HTPASSWD_PATH", Value:"/etc/docker/registry/htpasswd", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY", Value:"/var/lib/registry", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:3, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"3", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:268435456, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"data", ReadOnly:false, MountPath:"/var/lib/registry/", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"config", ReadOnly:false, MountPath:"/etc/docker/registry", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"kube-api-access-pn8ss", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(0xc002698480), ReadinessProbe:(*v1.Probe)(0xc0026984c0), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002f8b0b8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k3d-k3s-default-server-0", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc002fa6310), ImagePullSecrets:[]v1.LocalObjectReference{v1.LocalObjectReference{Name:"private-registry"}}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(0xc002f94ac8), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002f8b140)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002f8b160)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"system-node-critical", Priority:(*int32)(0xc002f8b16c), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002f8b17a), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0026c0b40), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Running", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 24, 59, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Ready", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 25, 1, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"ContainersReady", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 25, 1, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 24, 59, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.23.0.2", PodIP:"10.42.0.26", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.0.26"}}, StartTime:time.Date(2023, time.May, 17, 15, 24, 59, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus(nil), ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"docker-registry", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(0xc002f94ba0), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:true, RestartCount:0, Image:"127.0.0.1:31999/library/registry:2.8.1", ImageID:"127.0.0.1:31999/library/registry@sha256:85d4cd48754d4e8e4d4fe933bbde017d969e0e20775507add9faca39064bf9b0", ContainerID:"containerd://64b7bea1269b52579c8f77841552856af9cb4766ba479652d6c29897c47065f7", Started:(*bool)(0xc002f8b1da)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:36-04:00  -  Testing for pod only, phase: Running[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:36-04:00  -  Ready pods%!(EXTRA []string=[zarf-docker-registry-548dd476c8-ns2hb zarf-docker-registry-548dd476c8-7sh4p])[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:36-04:00  -  Selected pod zarf-docker-registry-548dd476c8-ns2hb to open port forward to[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:36-04:00  -  Using URL https://0.0.0.0:35721/api/v1/namespaces/zarf/pods/zarf-docker-registry-548dd476c8-ns2hb/portforward to create portforward[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:36-04:00  -  Creating port forwarding tunnel at http://127.0.0.1:38065/v2/_catalog[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/tunnel.go:476)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:36-04:00  -  tunnel.Endpoint()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/tunnel.go:314)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:36-04:00  -  crane.Push() /tmp/zarf-3322082491/images:ghcr.io/stefanprodan/podinfo:6.3.6 -> 127.0.0.1:38065/stefanprodan/podinfo:6.3.6-zarf-2985051089)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;249;5;0m2%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:cbec71bc608a2aa0dcc7e565e0e42c9f8d1ad5f0c404ca1661e5cb5d3373c4e8[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;249;5;0m2%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███[0m[0m                           [38;2;234;20;0m8%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:f56be85fc22e46face30e2c3de3f7fe7c15f8fd7c4e5add29d7f64b87abdaa09[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███[0m[0m                           [38;2;234;20;0m8%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████[0m[0m                      [38;2;190;64;0m25%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:94a390bf79144e3bfdc4b07df2485c4641176edb1df0eb7fd2f1a610dd03ee41[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████[0m[0m                      [38;2;190;64;0m25%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████[0m[0m                      [38;2;190;64;0m25%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████[0m[0m                      [38;2;190;64;0m25%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████[0m[0m                      [38;2;190;64;0m25%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:ee25e70d38f53fa69c1ce5a0b0e6d74d644bfb100cd5e37c69d331a581cfb398[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████[0m[0m                      [38;2;190;64;0m25%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████[0m[0m                    [38;2;170;84;0m33%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:1935c1ff52ceef1edba0693c48bd45dad981fe54bbd3a3d09d0caa4a4fc62f3f[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████[0m[0m                    [38;2;170;84;0m33%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████[0m[0m                    [38;2;170;84;0m33%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:bc2cacd75a0643cd14a07754756ae0294f29b0f1fcab53a3a595fbff61b42319[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████[0m[0m                    [38;2;170;84;0m33%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████[0m[0m               [38;2;127;127;0m50%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:8466a305868dbf3e03c88d8a8ebba61620e6134f0d839bea0f7a566fa2189c2d[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████[0m[0m               [38;2;127;127;0m50%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████[0m[0m               [38;2;127;127;0m50%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 127.0.0.1:38065/stefanprodan/podinfo:6.3.6-zarf-2985051089: digest: sha256:a313e161d50597014db8d0fb1cf663424c13756d01ff4a0882025a6e0281209a size: 1625[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████[0m[0m               [38;2;127;127;0m50%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  crane.Push() /tmp/zarf-3322082491/images:ghcr.io/stefanprodan/podinfo:6.3.6 -> 127.0.0.1:38065/stefanprodan/podinfo:6.3.6)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████[0m[0m               [38;2;127;127;0m50%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████████████████[0m[0m          [38;2;84;170;0m67%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:94a390bf79144e3bfdc4b07df2485c4641176edb1df0eb7fd2f1a610dd03ee41[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████████████████[0m[0m          [38;2;84;170;0m67%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████████████████[0m[0m          [38;2;84;170;0m67%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████████████████[0m[0m          [38;2;84;170;0m67%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████████████████[0m[0m          [38;2;84;170;0m67%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:ee25e70d38f53fa69c1ce5a0b0e6d74d644bfb100cd5e37c69d331a581cfb398[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████████████████[0m[0m          [38;2;84;170;0m67%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m████████████████████[0m[0m         [38;2;68;186;0m73%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:f56be85fc22e46face30e2c3de3f7fe7c15f8fd7c4e5add29d7f64b87abdaa09[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m████████████████████[0m[0m         [38;2;68;186;0m73%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████████████████[0m[0m        [38;2;63;191;0m75%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:cbec71bc608a2aa0dcc7e565e0e42c9f8d1ad5f0c404ca1661e5cb5d3373c4e8[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████████████████[0m[0m        [38;2;63;191;0m75%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████████████████████[0m[0m      [38;2;43;211;0m83%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:1935c1ff52ceef1edba0693c48bd45dad981fe54bbd3a3d09d0caa4a4fc62f3f[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████████████████████[0m[0m      [38;2;43;211;0m83%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████████████████[0m[0m  [38;2;0;254;0m100%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████████████████[0m[0m  [38;2;0;254;0m100%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:bc2cacd75a0643cd14a07754756ae0294f29b0f1fcab53a3a595fbff61b42319[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████████████████[0m[0m  [38;2;0;254;0m100%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 existing blob: sha256:8466a305868dbf3e03c88d8a8ebba61620e6134f0d839bea0f7a566fa2189c2d[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████████████████[0m[0m  [38;2;0;254;0m100%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████████████████[0m[0m  [38;2;0;255;0m100%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  2023/05/17 15:42:37 127.0.0.1:38065/stefanprodan/podinfo:6.3.6: digest: sha256:a313e161d50597014db8d0fb1cf663424c13756d01ff4a0882025a6e0281209a size: 1625[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████████████████[0m[0m  [38;2;0;255;0m100%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  tunnel.Close()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/tunnel.go:331)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████████████████[0m[0m  [38;2;0;255;0m100%[0m | 3s                                                                                                                                                                                                                                                                                                                       [92m[92m  ✔ [0m[0m [92m[92mPushed 1 images to the zarf registry[0m[0m
[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  template.Apply(types.ZarfComponent{Name:"podinfo-chart", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart{types.ZarfChart{Name:"podinfo", ReleaseName:"podinfo", URL:"oci://ghcr.io/stefanprodan/charts/podinfo", Version:"6.3.6", Namespace:"podinfo", ValuesFiles:[]string{"values/podinfo-values.yaml"}, GitPath:"", LocalPath:"", NoWait:false}}, Manifests:[]types.ZarfManifest(nil), Images:[]string{"ghcr.io/stefanprodan/podinfo:6.3.6"}, Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}, /tmp/zarf-3322082491/components/podinfo-chart/values/podinfo-6.3.6-0)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  templateMap = { "###ZARF_REGISTRY_AUTH_PULL###": "**sanitized**", "###ZARF_GIT_PULL###": "zarf-git-read-user", "###ZARF_VAR_PODINFO_TOO_COLOR###": "#ffffff", "###ZARF_STORAGE_CLASS###": "local-path", "###ZARF_GIT_PUSH###": "zarf-git-user", "###ZARF_GIT_AUTH_PUSH###": "**sanitized**", "###ZARF_REGISTRY_AUTH_PUSH###": "**sanitized**", "###ZARF_GIT_AUTH_PULL###": "**sanitized**", "###ZARF_REGISTRY###": "127.0.0.1:31999", "###ZARF_NODEPORT###": "31999",  }[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/template/template.go:184)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  deprecations = map[string]string{"###ZARF_DATA_INJECTON_MARKER###":"###ZARF_DATA_INJECTION_MARKER###"}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  helm.NewRenderer()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:37-04:00  -  template.Generate()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/template/template.go:28)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mProcessing helm chart podinfo:6.3.6 from oci://ghcr.io/stefanprodan/charts/podinfo[0m[0m[90m[90m (0s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mAttempt 1 of 4 to install chart[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mgetting history for release podinfo[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mgetting history for release podinfo[0m[0m[90m[90m (0s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mChecking for existing helm deployment[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mAttempting chart upgrade[0m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  helm.upgradeChart(&action.Configuration{RESTClientGetter:(*genericclioptions.ConfigFlags)(0xc0030f4360), Releases:(*storage.Storage)(0xc0030a10e0), KubeClient:(*kube.Client)(0xc0030ab050), RegistryClient:(*registry.Client)(nil), Capabilities:(*chartutil.Capabilities)(nil), Log:(func(string, ...interface {}))(0x2573f60)}, types.ConnectStrings{}, map[string]*v1.Namespace{"podinfo":(*v1.Namespace)(0xc0030ae9a0)}, &helm.Helm{BasePath:"/tmp/zarf-3322082491/components/podinfo-chart", Chart:types.ZarfChart{Name:"podinfo", ReleaseName:"podinfo", URL:"oci://ghcr.io/stefanprodan/charts/podinfo", Version:"6.3.6", Namespace:"podinfo", ValuesFiles:[]string{"values/podinfo-values.yaml"}, GitPath:"", LocalPath:"", NoWait:false}, ReleaseName:"podinfo", ChartLoadOverride:"", ChartOverride:(*chart.Chart)(nil), ValueOverride:map[string]interface {}(nil), Component:types.ZarfComponent{Name:"podinfo-chart", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart{types.ZarfChart{Name:"podinfo", ReleaseName:"podinfo", URL:"oci://ghcr.io/stefanprodan/charts/podinfo", Version:"6.3.6", Namespace:"podinfo", ValuesFiles:[]string{"values/podinfo-values.yaml"}, GitPath:"", LocalPath:"", NoWait:false}}, Manifests:[]types.ZarfManifest(nil), Images:[]string{"ghcr.io/stefanprodan/podinfo:6.3.6"}, Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}, Cluster:(*cluster.Cluster)(0xc000595060), Cfg:(*types.PackagerConfig)(0x7599a20), actionConfig:(*action.Configuration)(0xc0030e6380)}, values:template.Values{ registry: "127.0.0.1:31999" })[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  helm.loadChartData()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mpreparing upgrade for podinfo[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠹ [0m[0m [97m[97mpreparing upgrade for podinfo[0m[0m[90m[90m (0s)[0m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  helm.Run(renderedManifests *bytes.Buffer)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  Using temp path: '/tmp/zarf-4240101052'[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  template.Apply(types.ZarfComponent{Name:"podinfo-chart", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart{types.ZarfChart{Name:"podinfo", ReleaseName:"podinfo", URL:"oci://ghcr.io/stefanprodan/charts/podinfo", Version:"6.3.6", Namespace:"podinfo", ValuesFiles:[]string{"values/podinfo-values.yaml"}, GitPath:"", LocalPath:"", NoWait:false}}, Manifests:[]types.ZarfManifest(nil), Images:[]string{"ghcr.io/stefanprodan/podinfo:6.3.6"}, Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}, /tmp/zarf-4240101052/chart.yaml)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  templateMap = { "###ZARF_STORAGE_CLASS###": "local-path", "###ZARF_GIT_AUTH_PULL###": "**sanitized**", "###ZARF_VAR_PODINFO_TOO_COLOR###": "#ffffff", "###ZARF_REGISTRY###": "127.0.0.1:31999", "###ZARF_REGISTRY_AUTH_PULL###": "**sanitized**", "###ZARF_GIT_PUSH###": "zarf-git-user", "###ZARF_GIT_AUTH_PUSH###": "**sanitized**", "###ZARF_GIT_PULL###": "zarf-git-read-user", "###ZARF_NODEPORT###": "31999", "###ZARF_REGISTRY_AUTH_PUSH###": "**sanitized**",  }[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/template/template.go:184)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  deprecations = map[string]string{"###ZARF_DATA_INJECTON_MARKER###":"###ZARF_DATA_INJECTION_MARKER###"}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  k8s.GenerateRegistryPullCreds(podinfo, private-registry)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  k8s.LoadZarfState()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/state.go:151)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  ZarfState = {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "zarfAppliance": false,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "distro": "k3d",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "architecture": "amd64",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "storageClass": "local-path",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "agentTLS": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "ca": "KipzYW5pdGl6ZWQqKg==",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "cert": "KipzYW5pdGl6ZWQqKg==",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "key": "KipzYW5pdGl6ZWQqKg=="[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "gitServer": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullUsername": "zarf-git-read-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "http://zarf-gitea-http.zarf.svc.cluster.local:3000",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalServer": true[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "registryInfo": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-push",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullUsername": "zarf-pull",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "127.0.0.1:31999",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "nodePort": 31999,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalRegistry": true,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "secret": "**sanitized**"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "artifactServer": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "f4bb14541cf0525e9085cef59b08196497e5c7d2",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "http://zarf-gitea-http.zarf.svc.cluster.local:3000/api/packages/zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalServer": true[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "loggingSecret": "**sanitized**"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mpreparing upgrade for podinfo[0m[0m[90m[90m (1s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mperforming update for podinfo[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mcreating upgraded release for podinfo[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mchecking 2 resources for changes[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mLooks like there are no changes for Service "podinfo"[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mPatch Deployment "podinfo" in namespace podinfo[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mwaiting for release podinfo resources (created: 0 updated: 2  deleted: 0)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mbeginning wait for 2 resources with timeout of 15m0s[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mupdating status for upgraded release for podinfo[0m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  Upgrade complete[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/helm/chart.go:130)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [92m[92m  ✔ [0m[0m [92m[92mProcessing helm chart podinfo:6.3.6 from oci://ghcr.io/stefanprodan/charts/podinfo[0m[0m
[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  packager.deployComponent(types.TempPaths{Base:"/tmp/zarf-3322082491", InjectBinary:"/tmp/zarf-3322082491/zarf-injector", SeedImages:"/tmp/zarf-3322082491/seed-images", Images:"/tmp/zarf-3322082491/images", Components:"/tmp/zarf-3322082491/components", SbomTar:"/tmp/zarf-3322082491/sboms.tar", Sboms:"/tmp/zarf-3322082491/sboms", ZarfYaml:"/tmp/zarf-3322082491/zarf.yaml", ZarfSig:"/tmp/zarf-3322082491/zarf.yaml.sig", Checksums:"/tmp/zarf-3322082491/checksums.txt"}, types.ZarfComponent{Name:"podinfo-too-chart", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart{types.ZarfChart{Name:"podinfo-too", ReleaseName:"podinfo-too", URL:"oci://ghcr.io/stefanprodan/charts/podinfo", Version:"6.3.6", Namespace:"podinfo-too", ValuesFiles:[]string{"values/podinfo-too-values.yaml"}, GitPath:"", LocalPath:"", NoWait:false}}, Manifests:[]types.ZarfManifest(nil), Images:[]string{"ghcr.io/stefanprodan/podinfo:6.3.6"}, Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  packager.createComponentPaths({[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "name": "podinfo-too-chart",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "required": true,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "only": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "cluster": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "import": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "path": ""[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "scripts": {},[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "actions": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "onCreate": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "defaults": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m        "shell": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "onDeploy": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "defaults": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m        "shell": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "onRemove": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "defaults": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m        "shell": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "charts": [[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "name": "podinfo-too",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "releaseName": "podinfo-too",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "url": "oci://ghcr.io/stefanprodan/charts/podinfo",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "version": "6.3.6",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "namespace": "podinfo-too",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      "valuesFiles": [[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m        "values/podinfo-too-values.yaml"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m      ][0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    }[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  ],[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "images": [[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "ghcr.io/stefanprodan/podinfo:6.3.6"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  ],[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "extensions": {}[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m})[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m
[100m[100m                                                                                       [0m[0m
[100m[100m[97m[97m  📦 PODINFO-TOO-CHART COMPONENT                                                       [0m[100m[0m[100m[0m[0m
[100m[100m                                                                                       [0m[0m

[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  images.PushToZarfRegistry()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/images/push.go:24)[0m
[90m[0m[96m[96mPushing 1 images to the zarf registry[0m[0m  [38;2;255;0;0m0%[0m | 0s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  crane pushOptions = []crane.Option{(crane.Option)(0x17b6aa0), (crane.Option)(0x17b69c0), (crane.Option)(0x29ea280), (crane.Option)(0x29ea160)}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96mPushing 1 images to the zarf registry[0m[0m  [38;2;255;0;0m0%[0m | 0s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 0s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  tunnel.NewTunnel(zarf, svc, , 0, 0)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 0s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:38-04:00  -  k8s.NewK8sClient()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 0s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:39-04:00  -  tunnel.Connect(REGISTRY, false)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 1s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:39-04:00  -  tunnel.Establish()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/tunnel.go:378)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 1s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:39-04:00  -  Requested local port is 0. Selecting an open port on host system[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 1s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:39-04:00  -  tunnel.GetAvailablePort()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/utils/network.go:147)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 1s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:39-04:00  -  Selected port 43375[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 1s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:39-04:00  -  Opening tunnel 43375 -> 5000 for svc/zarf-docker-registry in namespace zarf[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/tunnel.go:415)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 1s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:39-04:00  -  k8s.NewK8sClient()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 1s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  tunnel.getAttachablePodForResource()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/tunnel.go:485)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  tunnel.getAttachablePodForService()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/tunnel.go:498)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  Testing pod zarf-docker-registry-548dd476c8-ns2hb[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"zarf-docker-registry-548dd476c8-ns2hb", GenerateName:"zarf-docker-registry-548dd476c8-", Namespace:"zarf", SelfLink:"", UID:"18702aee-2c26-4b82-b6e8-124d1920fe6b", ResourceVersion:"4816", Generation:0, CreationTimestamp:time.Date(2023, time.May, 17, 15, 42, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"docker-registry", "pod-template-hash":"548dd476c8", "release":"zarf-docker-registry", "zarf.dev/agent":"ignore"}, Annotations:map[string]string{"checksum/secret":"f2daf6b8d8fbfc91a178326a6fae3699706d4ce05883374d7f5ce4320a005e97"}, OwnerReferences:[]v1.OwnerReference{v1.OwnerReference{APIVersion:"apps/v1", Kind:"ReplicaSet", Name:"zarf-docker-registry-548dd476c8", UID:"1afc438d-79d0-4422-86f2-b4f3abbb19ab", Controller:(*bool)(0xc00302507a), BlockOwnerDeletion:(*bool)(0xc00302507b)}}, Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.May, 17, 15, 42, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0003e3c68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.May, 17, 15, 42, 2, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0003e3d10), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"config", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(0xc0023fa3c0), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}, v1.Volume{Name:"data", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(0xc0003e3d70), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}, v1.Volume{Name:"kube-api-access-tnpxm", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0025bd8a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"docker-registry", Image:"127.0.0.1:31999/library/registry:2.8.1", Command:[]string{"/bin/registry", "serve", "/etc/docker/registry/config.yml"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"REGISTRY_AUTH", Value:"htpasswd", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_AUTH_HTPASSWD_REALM", Value:"Registry Realm", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_AUTH_HTPASSWD_PATH", Value:"/etc/docker/registry/htpasswd", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY", Value:"/var/lib/registry", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:3, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"3", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:268435456, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"data", ReadOnly:false, MountPath:"/var/lib/registry/", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"config", ReadOnly:false, MountPath:"/etc/docker/registry", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"kube-api-access-tnpxm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(0xc0023fa4c0), ReadinessProbe:(*v1.Probe)(0xc0023fa500), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003025208), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k3d-k3s-default-server-0", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00079f650), ImagePullSecrets:[]v1.LocalObjectReference{v1.LocalObjectReference{Name:"private-registry"}}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(0xc000300b28), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003025290)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0030252b0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"system-node-critical", Priority:(*int32)(0xc0030252bc), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0030252ca), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc001cb5950), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Running", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 42, 1, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Ready", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 42, 2, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"ContainersReady", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 42, 2, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 42, 1, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.23.0.2", PodIP:"10.42.0.103", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.0.103"}}, StartTime:time.Date(2023, time.May, 17, 15, 42, 1, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus(nil), ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"docker-registry", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(0xc0003012f0), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:true, RestartCount:0, Image:"127.0.0.1:31999/library/registry:2.8.1", ImageID:"127.0.0.1:31999/library/registry@sha256:85d4cd48754d4e8e4d4fe933bbde017d969e0e20775507add9faca39064bf9b0", ContainerID:"containerd://acad36fdcd1f185021902ced0b2b5b297cf7574615a2d0eae1b667d5d84ceabd", Started:(*bool)(0xc00302532a)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  Testing for pod only, phase: Running[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  Testing pod zarf-docker-registry-548dd476c8-7sh4p[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"zarf-docker-registry-548dd476c8-7sh4p", GenerateName:"zarf-docker-registry-548dd476c8-", Namespace:"zarf", SelfLink:"", UID:"d1342f0f-7cae-4585-ba89-e964998994f7", ResourceVersion:"1384", Generation:0, CreationTimestamp:time.Date(2023, time.May, 17, 15, 24, 59, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"app":"docker-registry", "pod-template-hash":"548dd476c8", "release":"zarf-docker-registry", "zarf.dev/agent":"ignore"}, Annotations:map[string]string{"checksum/secret":"f2daf6b8d8fbfc91a178326a6fae3699706d4ce05883374d7f5ce4320a005e97"}, OwnerReferences:[]v1.OwnerReference{v1.OwnerReference{APIVersion:"apps/v1", Kind:"ReplicaSet", Name:"zarf-docker-registry-548dd476c8", UID:"1afc438d-79d0-4422-86f2-b4f3abbb19ab", Controller:(*bool)(0xc003024cea), BlockOwnerDeletion:(*bool)(0xc003024ceb)}}, Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.May, 17, 15, 24, 59, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00294dda0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.May, 17, 15, 25, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00294ddd0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"config", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(0xc0023fa180), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}, v1.Volume{Name:"data", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(0xc00294de18), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}, v1.Volume{Name:"kube-api-access-pn8ss", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0025bd820), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"docker-registry", Image:"127.0.0.1:31999/library/registry:2.8.1", Command:[]string{"/bin/registry", "serve", "/etc/docker/registry/config.yml"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"REGISTRY_AUTH", Value:"htpasswd", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_AUTH_HTPASSWD_REALM", Value:"Registry Realm", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_AUTH_HTPASSWD_PATH", Value:"/etc/docker/registry/htpasswd", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY", Value:"/var/lib/registry", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:3, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"3", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:268435456, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"data", ReadOnly:false, MountPath:"/var/lib/registry/", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"config", ReadOnly:false, MountPath:"/etc/docker/registry", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"kube-api-access-pn8ss", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(0xc0023fa280), ReadinessProbe:(*v1.Probe)(0xc0023fa2c0), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003024e78), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k3d-k3s-default-server-0", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00079f490), ImagePullSecrets:[]v1.LocalObjectReference{v1.LocalObjectReference{Name:"private-registry"}}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(0xc0003e25e8), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003024f00)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003024f20)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"system-node-critical", Priority:(*int32)(0xc003024f2c), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003024f3a), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc001cb5800), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Running", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 24, 59, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Ready", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 25, 1, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"ContainersReady", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 25, 1, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.May, 17, 15, 24, 59, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.23.0.2", PodIP:"10.42.0.26", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.0.26"}}, StartTime:time.Date(2023, time.May, 17, 15, 24, 59, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus(nil), ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"docker-registry", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(0xc0003e37b8), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:true, RestartCount:0, Image:"127.0.0.1:31999/library/registry:2.8.1", ImageID:"127.0.0.1:31999/library/registry@sha256:85d4cd48754d4e8e4d4fe933bbde017d969e0e20775507add9faca39064bf9b0", ContainerID:"containerd://64b7bea1269b52579c8f77841552856af9cb4766ba479652d6c29897c47065f7", Started:(*bool)(0xc003024f9a)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  Testing for pod only, phase: Running[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  Ready pods%!(EXTRA []string=[zarf-docker-registry-548dd476c8-ns2hb zarf-docker-registry-548dd476c8-7sh4p])[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  Selected pod zarf-docker-registry-548dd476c8-ns2hb to open port forward to[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  Using URL https://0.0.0.0:35721/api/v1/namespaces/zarf/pods/zarf-docker-registry-548dd476c8-ns2hb/portforward to create portforward[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  Creating port forwarding tunnel at http://127.0.0.1:43375/v2/_catalog[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/tunnel.go:476)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  tunnel.Endpoint()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/tunnel.go:314)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  crane.Push() /tmp/zarf-3322082491/images:ghcr.io/stefanprodan/podinfo:6.3.6 -> 127.0.0.1:43375/stefanprodan/podinfo:6.3.6-zarf-2985051089)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m  [38;2;255;0;0m0%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██[0m[0m                            [38;2;239;15;0m6%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  2023/05/17 15:42:40 existing blob: sha256:f56be85fc22e46face30e2c3de3f7fe7c15f8fd7c4e5add29d7f64b87abdaa09[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██[0m[0m                            [38;2;239;15;0m6%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██[0m[0m                            [38;2;239;15;0m6%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  2023/05/17 15:42:40 existing blob: sha256:ee25e70d38f53fa69c1ce5a0b0e6d74d644bfb100cd5e37c69d331a581cfb398[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██[0m[0m                            [38;2;239;15;0m6%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████[0m[0m                      [38;2;196;58;0m23%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  2023/05/17 15:42:40 existing blob: sha256:94a390bf79144e3bfdc4b07df2485c4641176edb1df0eb7fd2f1a610dd03ee41[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████[0m[0m                      [38;2;196;58;0m23%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████[0m[0m                      [38;2;196;58;0m23%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  2023/05/17 15:42:40 existing blob: sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████[0m[0m                      [38;2;196;58;0m23%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████[0m[0m                      [38;2;190;64;0m25%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  2023/05/17 15:42:40 existing blob: sha256:cbec71bc608a2aa0dcc7e565e0e42c9f8d1ad5f0c404ca1661e5cb5d3373c4e8[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████[0m[0m                      [38;2;190;64;0m25%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████[0m[0m               [38;2;127;127;0m33%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████[0m[0m               [38;2;127;127;0m50%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  2023/05/17 15:42:40 existing blob: sha256:1935c1ff52ceef1edba0693c48bd45dad981fe54bbd3a3d09d0caa4a4fc62f3f[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████[0m[0m               [38;2;127;127;0m33%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████[0m[0m               [38;2;127;127;0m50%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  2023/05/17 15:42:40 existing blob: sha256:bc2cacd75a0643cd14a07754756ae0294f29b0f1fcab53a3a595fbff61b42319[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████[0m[0m               [38;2;127;127;0m50%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  2023/05/17 15:42:40 existing blob: sha256:8466a305868dbf3e03c88d8a8ebba61620e6134f0d839bea0f7a566fa2189c2d[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████[0m[0m               [38;2;127;127;0m50%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████[0m[0m               [38;2;127;127;0m50%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  2023/05/17 15:42:40 127.0.0.1:43375/stefanprodan/podinfo:6.3.6-zarf-2985051089: digest: sha256:a313e161d50597014db8d0fb1cf663424c13756d01ff4a0882025a6e0281209a size: 1625[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████[0m[0m               [38;2;127;127;0m50%[0m | 2s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  crane.Push() /tmp/zarf-3322082491/images:ghcr.io/stefanprodan/podinfo:6.3.6 -> 127.0.0.1:43375/stefanprodan/podinfo:6.3.6)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████[0m[0m               [38;2;127;127;0m50%[0m | 2s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████████████████[0m[0m          [38;2;84;170;0m67%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  2023/05/17 15:42:40 existing blob: sha256:94a390bf79144e3bfdc4b07df2485c4641176edb1df0eb7fd2f1a610dd03ee41[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████████████████[0m[0m          [38;2;84;170;0m67%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████████████████[0m[0m          [38;2;78;176;0m69%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  2023/05/17 15:42:40 existing blob: sha256:cbec71bc608a2aa0dcc7e565e0e42c9f8d1ad5f0c404ca1661e5cb5d3373c4e8[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m███████████████████[0m[0m          [38;2;78;176;0m69%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████████████████[0m[0m        [38;2;63;191;0m75%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████████████████[0m[0m        [38;2;63;191;0m75%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  2023/05/17 15:42:40 existing blob: sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████████████████[0m[0m        [38;2;63;191;0m75%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████████████████[0m[0m        [38;2;63;191;0m75%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  2023/05/17 15:42:40 existing blob: sha256:ee25e70d38f53fa69c1ce5a0b0e6d74d644bfb100cd5e37c69d331a581cfb398[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████████████████[0m[0m        [38;2;63;191;0m75%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:40-04:00  -  2023/05/17 15:42:40 existing blob: sha256:f56be85fc22e46face30e2c3de3f7fe7c15f8fd7c4e5add29d7f64b87abdaa09[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████████████████[0m[0m        [38;2;63;191;0m75%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████████████████[0m[0m        [38;2;63;191;0m75%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  2023/05/17 15:42:41 existing blob: sha256:bc2cacd75a0643cd14a07754756ae0294f29b0f1fcab53a3a595fbff61b42319[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████████████████[0m[0m        [38;2;63;191;0m75%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████████████████████[0m[0m    [38;2;19;235;0m92%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  2023/05/17 15:42:41 existing blob: sha256:8466a305868dbf3e03c88d8a8ebba61620e6134f0d839bea0f7a566fa2189c2d[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m█████████████████████████[0m[0m    [38;2;19;235;0m92%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████████████████[0m[0m  [38;2;0;254;0m100%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  2023/05/17 15:42:41 existing blob: sha256:1935c1ff52ceef1edba0693c48bd45dad981fe54bbd3a3d09d0caa4a4fc62f3f[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████████████████[0m[0m  [38;2;0;254;0m100%[0m | 3s[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████████████████[0m[0m  [38;2;0;255;0m100%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  2023/05/17 15:42:41 127.0.0.1:43375/stefanprodan/podinfo:6.3.6: digest: sha256:a313e161d50597014db8d0fb1cf663424c13756d01ff4a0882025a6e0281209a size: 1625[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:50)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████████████████[0m[0m  [38;2;0;255;0m100%[0m | 3s[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  tunnel.Close()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/tunnel.go:331)[0m
[90m[0m[96m[96m     Pushing ghcr.io/stefanprodan/podinfo:6.3.6[0m[0m [36m[36m██████████████████████████[0m[0m  [38;2;0;255;0m100%[0m | 3s                                                                                                                                                                                                                                                                                                                       [92m[92m  ✔ [0m[0m [92m[92mPushed 1 images to the zarf registry[0m[0m
[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  template.Apply(types.ZarfComponent{Name:"podinfo-too-chart", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart{types.ZarfChart{Name:"podinfo-too", ReleaseName:"podinfo-too", URL:"oci://ghcr.io/stefanprodan/charts/podinfo", Version:"6.3.6", Namespace:"podinfo-too", ValuesFiles:[]string{"values/podinfo-too-values.yaml"}, GitPath:"", LocalPath:"", NoWait:false}}, Manifests:[]types.ZarfManifest(nil), Images:[]string{"ghcr.io/stefanprodan/podinfo:6.3.6"}, Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}, /tmp/zarf-3322082491/components/podinfo-too-chart/values/podinfo-too-6.3.6-0)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  templateMap = { "###ZARF_REGISTRY###": "127.0.0.1:31999", "###ZARF_REGISTRY_AUTH_PUSH###": "**sanitized**", "###ZARF_STORAGE_CLASS###": "local-path", "###ZARF_REGISTRY_AUTH_PULL###": "**sanitized**", "###ZARF_GIT_PUSH###": "zarf-git-user", "###ZARF_GIT_AUTH_PUSH###": "**sanitized**", "###ZARF_GIT_PULL###": "zarf-git-read-user", "###ZARF_GIT_AUTH_PULL###": "**sanitized**", "###ZARF_NODEPORT###": "31999", "###ZARF_VAR_PODINFO_TOO_COLOR###": "#ffffff",  }[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/template/template.go:184)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  deprecations = map[string]string{"###ZARF_DATA_INJECTON_MARKER###":"###ZARF_DATA_INJECTION_MARKER###"}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  helm.NewRenderer()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  template.Generate()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/template/template.go:28)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mProcessing helm chart podinfo-too:6.3.6 from oci://ghcr.io/stefanprodan/charts/podinfo[0m[0m[90m[90m (0s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mAttempt 1 of 4 to install chart[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mgetting history for release podinfo-too[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mgetting history for release podinfo-too[0m[0m[90m[90m (0s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mChecking for existing helm deployment[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mAttempting chart upgrade[0m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  helm.upgradeChart(&action.Configuration{RESTClientGetter:(*genericclioptions.ConfigFlags)(0xc00276afc0), Releases:(*storage.Storage)(0xc002bb8360), KubeClient:(*kube.Client)(0xc00289d9e0), RegistryClient:(*registry.Client)(nil), Capabilities:(*chartutil.Capabilities)(nil), Log:(func(string, ...interface {}))(0x2573f60)}, types.ConnectStrings{}, map[string]*v1.Namespace{"podinfo-too":(*v1.Namespace)(0xc00273bce0)}, &helm.Helm{BasePath:"/tmp/zarf-3322082491/components/podinfo-too-chart", Chart:types.ZarfChart{Name:"podinfo-too", ReleaseName:"podinfo-too", URL:"oci://ghcr.io/stefanprodan/charts/podinfo", Version:"6.3.6", Namespace:"podinfo-too", ValuesFiles:[]string{"values/podinfo-too-values.yaml"}, GitPath:"", LocalPath:"", NoWait:false}, ReleaseName:"podinfo-too", ChartLoadOverride:"", ChartOverride:(*chart.Chart)(nil), ValueOverride:map[string]interface {}(nil), Component:types.ZarfComponent{Name:"podinfo-too-chart", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart{types.ZarfChart{Name:"podinfo-too", ReleaseName:"podinfo-too", URL:"oci://ghcr.io/stefanprodan/charts/podinfo", Version:"6.3.6", Namespace:"podinfo-too", ValuesFiles:[]string{"values/podinfo-too-values.yaml"}, GitPath:"", LocalPath:"", NoWait:false}}, Manifests:[]types.ZarfManifest(nil), Images:[]string{"ghcr.io/stefanprodan/podinfo:6.3.6"}, Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}, Cluster:(*cluster.Cluster)(0xc000595060), Cfg:(*types.PackagerConfig)(0x7599a20), actionConfig:(*action.Configuration)(0xc0023fb780)}, values:template.Values{ registry: "127.0.0.1:31999" })[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  helm.loadChartData()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mpreparing upgrade for podinfo-too[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠹ [0m[0m [97m[97mpreparing upgrade for podinfo-too[0m[0m[90m[90m (0s)[0m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  helm.Run(renderedManifests *bytes.Buffer)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  Using temp path: '/tmp/zarf-4093504425'[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  template.Apply(types.ZarfComponent{Name:"podinfo-too-chart", Description:"", Default:false, Required:true, Only:types.ZarfComponentOnlyTarget{LocalOS:"", Cluster:types.ZarfComponentOnlyCluster{Architecture:"", Distros:[]string(nil)}}, Group:"", CosignKeyPath:"", Import:types.ZarfComponentImport{ComponentName:"", Path:""}, DeprecatedScripts:types.DeprecatedZarfComponentScripts{ShowOutput:false, TimeoutSeconds:0, Retry:false, Prepare:[]string(nil), Before:[]string(nil), After:[]string(nil)}, Actions:types.ZarfComponentActions{OnCreate:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnDeploy:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}, OnRemove:types.ZarfComponentActionSet{Defaults:types.ZarfComponentActionDefaults{Mute:false, MaxTotalSeconds:0, MaxRetries:0, Dir:"", Env:[]string(nil), Shell:types.ZarfComponentActionShell{Windows:"", Linux:"", Darwin:""}}, Before:[]types.ZarfComponentAction(nil), After:[]types.ZarfComponentAction(nil), OnSuccess:[]types.ZarfComponentAction(nil), OnFailure:[]types.ZarfComponentAction(nil)}}, Files:[]types.ZarfFile(nil), Charts:[]types.ZarfChart{types.ZarfChart{Name:"podinfo-too", ReleaseName:"podinfo-too", URL:"oci://ghcr.io/stefanprodan/charts/podinfo", Version:"6.3.6", Namespace:"podinfo-too", ValuesFiles:[]string{"values/podinfo-too-values.yaml"}, GitPath:"", LocalPath:"", NoWait:false}}, Manifests:[]types.ZarfManifest(nil), Images:[]string{"ghcr.io/stefanprodan/podinfo:6.3.6"}, Repos:[]string(nil), DataInjections:[]types.ZarfDataInjection(nil), Extensions:extensions.ZarfComponentExtensions{BigBang:(*extensions.BigBang)(nil)}}, /tmp/zarf-4093504425/chart.yaml)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  templateMap = { "###ZARF_VAR_PODINFO_TOO_COLOR###": "#ffffff", "###ZARF_REGISTRY_AUTH_PUSH###": "**sanitized**", "###ZARF_REGISTRY_AUTH_PULL###": "**sanitized**", "###ZARF_STORAGE_CLASS###": "local-path", "###ZARF_REGISTRY###": "127.0.0.1:31999", "###ZARF_GIT_PULL###": "zarf-git-read-user", "###ZARF_GIT_AUTH_PULL###": "**sanitized**", "###ZARF_GIT_PUSH###": "zarf-git-user", "###ZARF_GIT_AUTH_PUSH###": "**sanitized**", "###ZARF_NODEPORT###": "31999",  }[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/template/template.go:184)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  deprecations = map[string]string{"###ZARF_DATA_INJECTON_MARKER###":"###ZARF_DATA_INJECTION_MARKER###"}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  k8s.GenerateRegistryPullCreds(podinfo-too, private-registry)[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  k8s.LoadZarfState()[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/cluster/state.go:151)[0m
[90m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:41-04:00  -  ZarfState = {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "zarfAppliance": false,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "distro": "k3d",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "architecture": "amd64",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "storageClass": "local-path",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "agentTLS": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "ca": "KipzYW5pdGl6ZWQqKg==",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "cert": "KipzYW5pdGl6ZWQqKg==",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "key": "KipzYW5pdGl6ZWQqKg=="[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "gitServer": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullUsername": "zarf-git-read-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "http://zarf-gitea-http.zarf.svc.cluster.local:3000",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalServer": true[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "registryInfo": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-push",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullUsername": "zarf-pull",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pullPassword": "**sanitized**",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "127.0.0.1:31999",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "nodePort": 31999,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalRegistry": true,[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "secret": "**sanitized**"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "artifactServer": {[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushUsername": "zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "pushPassword": "f4bb14541cf0525e9085cef59b08196497e5c7d2",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "address": "http://zarf-gitea-http.zarf.svc.cluster.local:3000/api/packages/zarf-git-user",[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m    "internalServer": true[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  },[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m  "loggingSecret": "**sanitized**"[0m[0m
[30;100m[30;100m         [0m[0m [90m[90m}[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mpreparing upgrade for podinfo-too[0m[0m[90m[90m (1s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mperforming update for podinfo-too[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mcreating upgraded release for podinfo-too[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mchecking 2 resources for changes[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mLooks like there are no changes for Service "podinfo-too"[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mPatch Deployment "podinfo-too" in namespace podinfo-too[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mwaiting for release podinfo-too resources (created: 0 updated: 2  deleted: 0)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mbeginning wait for 2 resources with timeout of 15m0s[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠼ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (1s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠴ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (1s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠦ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (1s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠧ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (1s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠇ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (2s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠏ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (2s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (2s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (2s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠹ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (2s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (3s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠼ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (3s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠴ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (3s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠦ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (3s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠧ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (3s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠇ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (4s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠏ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (4s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠋ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (4s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠙ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (4s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠹ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (4s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mDeployment is not ready: podinfo-too/podinfo-too. 0 out of 1 expected pods are ready[0m[0m[90m[90m (5s)[0m[0m                                                                                                                                                                                                                                                                                                                       [96m[96m  ⠸ [0m[0m [97m[97mupdating status for upgraded release for podinfo-too[0m[0m[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:46-04:00  -  Upgrade complete[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/internal/packager/helm/chart.go:130)[0m
[90m[0m                                                                                                                                                                                                                                                                                                                       [92m[92m  ✔ [0m[0m [92m[92mProcessing helm chart podinfo-too:6.3.6 from oci://ghcr.io/stefanprodan/charts/podinfo[0m[0m
[92m[92m  ✔ [0m[0m [92m[92mZarf deployment complete[0m[0m

[30;100m[30;100m  DEBUG  [0m[0m [90m[90m2023-05-17T15:42:46-04:00  -  message.PrintConnectStringTable(types.ConnectStrings{})[0m[0m[90m[0m
[90m└ (/home/runner/work/zarf/zarf/src/pkg/message/message.go:118)[0m
[90m[0m