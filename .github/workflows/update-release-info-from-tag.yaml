#inputs:
#  github-token:
#    description: GitHub token to authenticate to the GitHub REST API
#    required: true
#  tag-name:
#    description: 'GitHub tag name (ex: v0.3.0)'
#    required: true
#
#outputs:
#  latest-package-version:
#    description: Github release ID
#    value: ${{ steps.get-release-id.outputs.release-id }}

name: update-release-info-from-tag

on:
  workflow_dispatch:
    inputs:
      tag-name:
        description: 'GitHub tag name'
        required: true
      release-body-update:
        description: 'Content to append to release body'
        required: true

jobs:
  update-release-body:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Release ID
        id: get-release-id
        run: |
          TAG_NAME="${{ github.event.inputs.tag-name }}"
          #RELEASES=$(curl -s -H "Authorization: Bearer ${{ secrets.RELEASE_PAT }}" "https://api.github.com/repos/${{ github.repository }}/releases")
          RELEASES=$(curl -s -H "Authorization: Bearer ${GH_TOKEN}" "https://api.github.com/repos/${{ github.repository }}/releases")
          RELEASE_ID=$(echo "$RELEASES" | jq -r --arg TAG_NAME "$TAG_NAME" '.[] | select(.tag_name == $TAG_NAME) | .id')
          echo "Release ID for tag $TAG_NAME: $RELEASE_ID"
          echo "::set-output name=release-id::$RELEASE_ID"
        env:
          TAG_NAME: ${{ github.event.inputs.tag-name }}
          GH_TOKEN: ${{ github.token }}
          #RELEASE_PAT: ${{ secrets.RELEASE_PAT }}
          
      - name: Show Release ID
        run: |
          echo "Release ID: ${{ steps.get-release-id.outputs.release-id }}"
      
      - name: Append to Release Body
        id: append-to-release-body
        run: |
          RELEASE_BODY_UPDATE="${{ github.event.inputs.release-body-update }}"
          #RELEASE_BODY=$(curl -s -H "Authorization: Bearer ${{ secrets.RELEASE_PAT }}" "https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.get-release-id.outputs.release-id }}" | jq '.body' | sed -e 's/\"//g')
          RELEASE_BODY=$(curl -s -H "Authorization: Bearer ${GH_TOKEN}" "https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.get-release-id.outputs.release-id }}" | jq '.body' | sed -e 's/\"//g')
          NEW_RELEASE_BODY="$RELEASE_BODY\n\n$RELEASE_BODY_UPDATE"
          #curl -X PATCH -H "Authorization: Bearer ${GH_TOKEN}" -H "Accept: application/vnd.github.v3+json" -d "{\"body\": \"$NEW_RELEASE_BODY\"}" "https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.get-release-id.outputs.release-id }}"
          curl -X PATCH -H "Authorization: Bearer ${{ secrets.RELEASE_PAT }}" -H "Accept: application/vnd.github.v3+json" -d "{\"body\": \"$NEW_RELEASE_BODY\"}" "https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.get-release-id.outputs.release-id }}"
        env:
          RELEASE_BODY_UPDATE: ${{ github.event.inputs.release-body-update }}
          GH_TOKEN: ${{ github.token }}
          #RELEASE_PAT: ${{ secrets.RELEASE_PAT }}

