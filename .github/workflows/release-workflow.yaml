on:
  push:
    branches:
      - main

name: release-please-workflow

jobs:
  tag-new-version:
    permissions: write-all
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-flag.outputs.release_created }}
      release_tag: ${{ steps.release-tag.outputs.release_tag }}
    steps:
      - name: Create Release Tag
        id: tag
        uses: google-github-actions/release-please-action@v3.7.10
        with:
          command: manifest # use configs in release-please-config.json
      - id: release-flag
        run: echo "release_created=${{ steps.tag.outputs.release_created || false }}" >> $GITHUB_OUTPUT 
      - id: release-tag
        run: echo "release_tag=${{ steps.tag.outputs.version || false }}" >> $GITHUB_OUTPUT 

  update-release-notes:
    needs: tag-new-version
    runs-on: ubuntu-latest
    if: ${{ needs.tag-new-version.outputs.release_created == 'true'}}
    outputs:
      deploy_info: ${{ steps.deploy-info.outputs.deploy_info }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build Deploy Info
        id: deploy-info
        run: |
          PREFIX='\\\n---\n#### HOW TO DEPLOY\n'
          # set list of all zarf pkgs
          PKGS="zarf-package-podinfos \
                 zarf-package-another-podinfos \
                 zarf-package-yet-another-podinfos"
          # loop thru all the zarf pkgs and build regex
          for pkg in ${PKGS}; do
            DEPLOY_INFO="${DEPLOY_INFO}\\\`\\\`\\\`console\nzarf package deploy oci://ghcr.io/mxnxpx/packages/$pkg:\${{ needs.tag-new-version.outputs.release_tag }}-amd\n\\\`\\\`\\\`\n"
          done
          # add the prefix
          DEPLOY_INFO="${PREFIX}${DEPLOY_INFO}"
          # set as GH output
          echo "deploy_info=${DEPLOY_INFO}" >> $GITHUB_ENV
      - name: Call Update Release Notes
        id: call-update-release-notes
        uses: ./.github/workflows/update-release-info-from-tag.yaml
        with:
          tag-name: ${{ needs.tag-new-version.outputs.release_tag }}
          release-body-top: '\[\/\/\]: # \(MODIFIED BY WORKFLOW\)\\n'
          release-body-bottom: ${{ steps.deploy-info.outputs.deploy_info }}

  publish-release:
    needs: tag-new-version
    if: ${{ needs.tag-new-version.outputs.release_created == 'true'}}
    runs-on: ubuntu-latest
    steps:
      - name: Publish Release Artifact
        id: echo-release
        run: echo "RELEASE ARTIFACT WILL BE CREATED AT THIS POINT"